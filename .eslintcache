[{"C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\index.js":"1","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\App.js":"2","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\CommandsTable.js":"3","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\Home.js":"4","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\ReportIssue.js":"5","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\AboutUs.js":"6"},{"size":437,"mtime":1608965193373,"results":"7","hashOfConfig":"8"},{"size":401,"mtime":1609005439110,"results":"9","hashOfConfig":"8"},{"size":1971,"mtime":1609044551867,"results":"10","hashOfConfig":"8"},{"size":1538,"mtime":1609047105207,"results":"11","hashOfConfig":"8"},{"size":442,"mtime":1609006409920,"results":"12","hashOfConfig":"8"},{"size":481,"mtime":1609005382384,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wzqhsr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\index.js",[],["29","30"],"C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\App.js",[],"C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\CommandsTable.js",["31"],"import React from 'react'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction CommandsTable() {\r\n\r\n    var CommandsDetails = require('./commandDetails.json');\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n\r\n    // Copy to clipboard\r\n    const copyToClipboard = (command) =>{\r\n        var toCopy = \"tb \" + command;\r\n\r\n        // toCopy\r\n        var temp =document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n        \r\n\r\n        var message = \"Copied '\"+ toCopy +\"' to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n          })\r\n    }\r\n\r\n    const tableRows = CommandsDetails.map(index => {\r\n        return(\r\n            <div className=\"table-row\" key={index.id} onDoubleClick={ () => copyToClipboard(index.shortCommand)}>\r\n                <div className=\"every-command-row\">\r\n                    {index.name}\r\n                </div>\r\n                <div className=\"every-command-row\">\r\n                    {index.shortCommand}\r\n                </div>\r\n                <div className=\"every-command-row\">\r\n                    {index.longCommand}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div id=\"commands\" className=\"main-black-div\">\r\n\r\n            <h2>Commands</h2>\r\n            <div className=\"table-header\">\r\n                <div className=\"every-command-row\">\r\n                    Name\r\n                </div>\r\n                <div className=\"every-command-row\">\r\n                    Command\r\n                </div>\r\n                <div className=\"every-command-row\">\r\n                    Optional Command\r\n                </div>\r\n            </div>\r\n            {tableRows}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommandsTable\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\Home.js",["32"],"import React from 'react'\r\n\r\nfunction Home() {\r\n    \r\n    return (\r\n        <div id='home' className='main-black-div'>\r\n            <h1>Toxic Bot</h1>\r\n            <div className=\"description-div\">\r\n                <div className=\"image-div\">\r\n                    <img src=\"https://i.ibb.co/7tynPG9/Logo.jpg\" className=\"logo-image\" ></img>\r\n                </div>\r\n                <div className=\"description-text\">\r\n                    A discord Bot to play some of the most famous meme dialogues and songs out there !!!! <br /> <br />\r\n                    -- Some of the best memes. <br />\r\n                    -- Queue memes (Upto 7). <br />\r\n                    -- Manage Queue <br /> <br />\r\n                    Interface Commands <br />\r\n                    -- Help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;={\">\"} tb Help <br />\r\n                    -- Display Queue ={\">\"} tb Queue <br />\r\n                    -- Disconnect&nbsp;&nbsp;&nbsp;&nbsp; ={\">\"} tb (dc / leave) <br />\r\n                    -- tb rm / tb remove removes the last added meme. <br />\r\n                    -- tb clrq / tb clearqueue clears the Queue. \r\n\r\n                </div>\r\n            </div>\r\n            <a href=\"https://discord.com/oauth2/authorize?client_id=767652353171652629&permissions=0&scope=bot\" > \r\n                <button className=\"add-bot-button\">\r\n                    <h2>Add to your server </h2>\r\n                </button>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\ReportIssue.js",[],"C:\\Users\\princ\\Documents\\GitHub\\ToxicBotDiscord.github.io\\src\\components\\AboutUs.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":8,"column":30,"nodeType":"39","messageId":"40","endLine":8,"endColumn":43},{"ruleId":"41","severity":1,"message":"42","line":10,"column":21,"nodeType":"43","endLine":10,"endColumn":90},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'closeSnackbar' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]